<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BukuKita</name>
    </assembly>
    <members>
        <member name="M:BukuKita.Auth.AuthSystem.Login(System.String,System.String)">
            <summary>
            Melakukan login berdasarkan email dan password
            </summary>
        </member>
        <member name="M:BukuKita.Auth.AuthSystem.RegisterMahasiswa">
            <summary>
            Registrasi Mahasiswa baru menggunakan state machine
            </summary>
        </member>
        <member name="M:BukuKita.Auth.AuthSystem.GetUsers">
            <summary>
            Mengembalikan daftar seluruh user.
            </summary>
        </member>
        <member name="M:BukuKita.Controllers.ApprovalsController.GetAllApprovals">
            <summary>
            Get all approvals
            </summary>
        </member>
        <member name="M:BukuKita.Controllers.ApprovalsController.GetPendingApprovals">
            <summary>
            Get pending approvals
            </summary>
        </member>
        <member name="M:BukuKita.Controllers.ApprovalsController.GetApprovalById(System.String)">
            <summary>
            Get approval by ID
            </summary>
        </member>
        <member name="M:BukuKita.Controllers.ApprovalsController.CreateApproval(BukuKita.Controllers.CreateApprovalRequest)">
            <summary>
            Create new approval
            </summary>
        </member>
        <member name="M:BukuKita.Controllers.ApprovalsController.ProcessApproval(System.String,BukuKita.Controllers.ProcessApprovalRequest)">
            <summary>
            Process approval (approve/reject)
            </summary>
        </member>
        <member name="M:BukuKita.Controllers.ApprovalsController.DeleteApproval(System.String)">
            <summary>
            Delete approval
            </summary>
        </member>
        <member name="P:BukuKita.Controllers.CreateApprovalRequest.IdBuku">
            <summary>
            ID buku yang akan dipinjam
            </summary>
            <example>B01</example>
        </member>
        <member name="P:BukuKita.Controllers.CreateApprovalRequest.NamaPeminjam">
            <summary>
            Nama peminjam
            </summary>
            <example>John Doe</example>
        </member>
        <member name="P:BukuKita.Controllers.ProcessApprovalRequest.Status">
            <summary>
            Status: "Approved" atau "Rejected"
            </summary>
            <example>Approved</example>
        </member>
        <member name="P:BukuKita.Controllers.ProcessApprovalRequest.Keterangan">
            <summary>
            Keterangan atau catatan (opsional)
            </summary>
            <example>Peminjaman disetujui</example>
        </member>
        <member name="T:BukuKita.MainMenu">
            <summary>
            Kelas MainMenu yang menangani fungsionalitas utama aplikasi dan konfigurasi
            </summary>
        </member>
        <member name="M:BukuKita.MainMenu.#ctor">
            <summary>
            Invariant kelas:
            - Path file konfigurasi harus valid
            - Sistem autentikasi harus diinisialisasi dengan benar
            - Daftar buku, peminjaman, pengembalian, dan approval harus selalu diinisialisasi
            </summary>
            <summary>
            Menginisialisasi instance baru dari kelas MainMenu
            </summary>
        </member>
        <member name="M:BukuKita.MainMenu.LoadConfiguration">
            <summary>
            Memuat konfigurasi dari file atau membuat konfigurasi default jika file tidak ada
            </summary>
            <returns>Dictionary berisi nilai konfigurasi</returns>
        </member>
        <member name="M:BukuKita.MainMenu.SaveConfiguration">
            <summary>
            Menyimpan konfigurasi saat ini ke file
            </summary>
        </member>
        <member name="M:BukuKita.MainMenu.GetConfigValue``1(System.String,``0)">
            <summary>
            Mendapatkan nilai konfigurasi dengan kunci tertentu
            </summary>
            <typeparam name="T">Tipe nilai konfigurasi</typeparam>
            <param name="key">Kunci konfigurasi yang dicari</param>
            <param name="defaultValue">Nilai default jika kunci tidak ditemukan</param>
            <returns>Nilai konfigurasi atau default jika tidak ditemukan</returns>
        </member>
        <member name="M:BukuKita.MainMenu.SetConfigValue``1(System.String,``0)">
            <summary>
            Menetapkan nilai konfigurasi dengan kunci tertentu dan menyimpan konfigurasi ke file
            </summary>
            <typeparam name="T">Tipe nilai konfigurasi</typeparam>
            <param name="key">Kunci konfigurasi yang akan diatur</param>
            <param name="value">Nilai yang akan ditetapkan untuk kunci konfigurasi</param>
        </member>
        <member name="M:BukuKita.MainMenu.HandleConfigurationMenu">
            <summary>
            Menampilkan dan menangani menu konfigurasi
            </summary>
        </member>
        <member name="M:BukuKita.MainMenu.HandleMenuItemsConfiguration">
            <summary>
            Menangani submenu konfigurasi item menu
            </summary>
        </member>
        <member name="M:BukuKita.MainMenu.GetAllBooks">
            <summary>
            Mendapatkan semua buku dalam sistem
            </summary>
            <returns>Daftar semua buku</returns>
        </member>
        <member name="M:BukuKita.MainMenu.SearchBooks(System.String)">
            <summary>
            Mencari buku yang cocok dengan kata kunci yang ditentukan
            </summary>
            <param name="keyword">Kata kunci pencarian yang tidak boleh null</param>
            <returns>Daftar buku yang cocok dengan kriteria pencarian</returns>
        </member>
        <member name="M:BukuKita.MainMenu.GetBookById(System.String)">
            <summary>
            Mendapatkan buku berdasarkan ID-nya
            </summary>
            <param name="id">ID buku yang tidak boleh null atau kosong</param>
            <returns>Buku dengan ID yang ditentukan atau null jika tidak ditemukan</returns>
        </member>
        <member name="M:BukuKita.MainMenu.GetAllPeminjaman">
            <summary>
            Mendapatkan semua catatan peminjaman
            </summary>
            <returns>Daftar semua catatan peminjaman</returns>
        </member>
        <member name="M:BukuKita.MainMenu.GetAllPengembalian">
            <summary>
            Mendapatkan semua catatan pengembalian
            </summary>
            <returns>Daftar semua catatan pengembalian</returns>
        </member>
        <member name="M:BukuKita.MainMenu.CreatePeminjaman(BookLibrary.BookLib.Buku,System.String)">
            <summary>
            Membuat catatan peminjaman baru
            </summary>
            <param name="buku">Buku yang akan dipinjam, tidak boleh null</param>
            <param name="namaPeminjam">Nama peminjam, tidak boleh null atau kosong</param>
            <returns>Catatan peminjaman yang dibuat</returns>
        </member>
        <member name="M:BukuKita.MainMenu.CreateApproval(System.String,System.String,System.String)">
            <summary>
            Membuat catatan approval baru (Method asli untuk kompatibilitas)
            </summary>
            <param name="idBuku">ID buku, tidak boleh null atau kosong</param>
            <param name="judulBuku">Judul buku, tidak boleh null atau kosong</param>
            <param name="namaPeminjam">Nama peminjam, tidak boleh null atau kosong</param>
            <returns>Catatan approval yang dibuat</returns>
        </member>
        <member name="M:BukuKita.MainMenu.CreateApprovalWithValidation(System.String,System.String,System.String)">
            <summary>
            Membuat catatan approval baru dengan validasi enhanced untuk API
            </summary>
            <param name="idBuku">ID buku, tidak boleh null atau kosong</param>
            <param name="judulBuku">Judul buku, tidak boleh null atau kosong</param>
            <param name="namaPeminjam">Nama peminjam, tidak boleh null atau kosong</param>
            <returns>Result dengan approval yang dibuat atau error message</returns>
        </member>
        <member name="M:BukuKita.MainMenu.GetAllApprovals">
            <summary>
            Mendapatkan semua catatan approval
            </summary>
            <returns>Daftar semua catatan approval</returns>
        </member>
        <member name="M:BukuKita.MainMenu.GetApprovalById(System.String)">
            <summary>
            Mendapatkan approval berdasarkan ID
            </summary>
            <param name="idApproval">ID approval</param>
            <returns>Approval atau null jika tidak ditemukan</returns>
        </member>
        <member name="M:BukuKita.MainMenu.GetApprovalsByUser(System.String)">
            <summary>
            Mendapatkan approval berdasarkan nama peminjam
            </summary>
            <param name="namaPeminjam">Nama peminjam</param>
            <returns>Daftar approval dari peminjam tersebut</returns>
        </member>
        <member name="M:BukuKita.MainMenu.GetPendingApprovals">
            <summary>
            Mendapatkan semua catatan approval yang statusnya pending
            </summary>
            <returns>Daftar catatan approval pending</returns>
        </member>
        <member name="M:BukuKita.MainMenu.ProcessApproval(BukuKita.Model.Approval,System.String,System.String)">
            <summary>
            Memproses permintaan approval dengan memperbarui statusnya (Method asli untuk kompatibilitas)
            </summary>
            <param name="approval">Approval yang akan diproses, tidak boleh null</param>
            <param name="newStatus">Status baru yang akan ditetapkan, harus 'Approved' atau 'Rejected'</param>
            <param name="keterangan">Komentar/catatan opsional</param>
        </member>
        <member name="M:BukuKita.MainMenu.ProcessApprovalWithValidation(System.String,System.String,System.String)">
            <summary>
            Memproses permintaan approval dengan memperbarui statusnya (Enhanced untuk API)
            </summary>
            <param name="idApproval">ID approval yang akan diproses</param>
            <param name="newStatus">Status baru yang akan ditetapkan, harus 'Approved' atau 'Rejected'</param>
            <param name="keterangan">Komentar/catatan opsional</param>
            <returns>Result dari pemrosesan approval</returns>
        </member>
        <member name="M:BukuKita.MainMenu.DeleteApproval(System.String)">
            <summary>
            Menghapus approval (hanya yang masih pending)
            </summary>
            <param name="idApproval">ID approval yang akan dihapus</param>
            <returns>Result dari penghapusan approval</returns>
        </member>
        <member name="M:BukuKita.MainMenu.InitializeBooks">
            <summary>
            Menginisialisasi daftar buku dengan data sampel
            </summary>
            <returns>Daftar buku yang diinisialisasi</returns>
        </member>
        <member name="M:BukuKita.MainMenu.DisplayMainMenu">
            <summary>
            Menampilkan menu utama dan menangani interaksi pengguna
            </summary>
        </member>
        <member name="M:BukuKita.MainMenu.HandleLogin">
            <summary>
            Menangani proses login
            </summary>
        </member>
        <member name="M:BukuKita.MainMenu.HandleAdminMenu(BukuKita.Model.Admin)">
            <summary>
            Menangani menu admin dan fungsionalitas khusus admin
            </summary>
            <param name="admin">Pengguna admin, tidak boleh null</param>
        </member>
        <member name="M:BukuKita.MainMenu.HandleMahasiswaMenu(BukuKita.Model.Mahasiswa)">
            <summary>
            Menangani menu mahasiswa dan fungsionalitas khusus mahasiswa
            </summary>
            <param name="mahasiswa">Pengguna mahasiswa, tidak boleh null</param>
        </member>
        <member name="M:BukuKita.MainMenu.ShowUserApprovals(System.String)">
            <summary>
            Menampilkan status approval untuk pengguna tertentu
            </summary>
            <param name="namaPeminjam">Nama peminjam, tidak boleh null atau kosong</param>
        </member>
        <member name="M:BukuKita.MainMenu.RequestNewApproval(System.String)">
            <summary>
            Menangani permintaan approval peminjaman buku baru
            </summary>
            <param name="namaPeminjam">Nama peminjam, tidak boleh null atau kosong</param>
        </member>
        <member name="T:BukuKita.ApiResult`1">
            <summary>
            Generic result class untuk API responses
            </summary>
            <typeparam name="T">Tipe data yang dikembalikan</typeparam>
        </member>
        <member name="T:BukuKita.MenuItem">
            <summary>
            Kelas untuk merepresentasikan item menu dalam konfigurasi
            </summary>
        </member>
        <member name="F:BukuKita.MenuItem._id">
            <summary>
            Invariant kelas:
            - Id tidak boleh null atau kosong
            - Name tidak boleh null atau kosong
            </summary>
        </member>
        <member name="P:BukuKita.MenuItem.Id">
            <summary>
            Mendapatkan atau menetapkan ID item menu
            </summary>
        </member>
        <member name="P:BukuKita.MenuItem.Name">
            <summary>
            Mendapatkan atau menetapkan nama item menu
            </summary>
        </member>
        <member name="T:BukuKita.View.ApprovalView">
            <summary>
            Kelas ApprovalView yang mengelola fungsionalitas UI terkait approval peminjaman
            </summary>
        </member>
        <member name="M:BukuKita.View.ApprovalView.DisplayMenu(System.Collections.Generic.List{BukuKita.Model.Approval},System.Collections.Generic.List{BookLibrary.BookLib.Buku},BukuKita.Model.Admin)">
            <summary>
            Invariant kelas:
            - Semua operasi approval harus menjaga konsistensi dalam daftar approval
            - Status approval harus selalu salah satu dari: "Pending", "Approved", atau "Rejected"
            </summary>
            <summary>
            Menampilkan menu pengelolaan approval
            </summary>
            <param name="daftarApproval">Daftar approval yang tidak boleh null</param>
            <param name="daftarBuku">Daftar buku yang tidak boleh null</param>
            <param name="admin">Pengguna admin yang tidak boleh null</param>
        </member>
        <member name="M:BukuKita.View.ApprovalView.ShowAllApprovals(System.Collections.Generic.List{BukuKita.Model.Approval})">
            <summary>
            Menampilkan semua approval yang ada dalam sistem
            </summary>
            <param name="daftarApproval">Daftar approval yang tidak boleh null</param>
        </member>
        <member name="M:BukuKita.View.ApprovalView.ShowPendingApprovals(System.Collections.Generic.List{BukuKita.Model.Approval})">
            <summary>
            Menampilkan hanya approval yang statusnya pending
            </summary>
            <param name="daftarApproval">Daftar approval yang tidak boleh null</param>
        </member>
        <member name="M:BukuKita.View.ApprovalView.ApproveRequest(System.Collections.Generic.List{BukuKita.Model.Approval},System.Collections.Generic.List{BookLibrary.BookLib.Buku},BukuKita.Model.Admin)">
            <summary>
            Menyetujui permintaan peminjaman yang pending
            </summary>
            <param name="daftarApproval">Daftar approval yang tidak boleh null</param>
            <param name="daftarBuku">Daftar buku yang tidak boleh null</param>
            <param name="admin">Pengguna admin yang tidak boleh null</param>
        </member>
        <member name="M:BukuKita.View.ApprovalView.RejectRequest(System.Collections.Generic.List{BukuKita.Model.Approval},BukuKita.Model.Admin)">
            <summary>
            Menolak permintaan peminjaman yang pending
            </summary>
            <param name="daftarApproval">Daftar approval yang tidak boleh null</param>
            <param name="admin">Pengguna admin yang tidak boleh null</param>
        </member>
    </members>
</doc>
